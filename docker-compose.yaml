version: '3'

services:

  db:
    container_name: transcendence-db
    image: 'postgres:latest'
    user: root
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./.postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}


  backend:
    image: transcendence-backend
    container_name: transcendence-backend
    build: ./backend
    user: root
    depends_on:
      - db
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
      - ./backend:/usr/src/app
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
      - BACKEND_PROTOCOL=${BACKEND_PROTOCOL}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - FRONTEND_PROTOCOL=${FRONTEND_PROTOCOL}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}


  frontend:
    image: transcendence-frontend
    container_name: transcendence-frontend
    build: ./frontend
    user: root
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT} 
    volumes:
      - ./frontend:/frontend
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=${NODE_ENV}
      - BACKEND_PROTOCOL=${BACKEND_PROTOCOL}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - FRONTEND_PROTOCOL=${FRONTEND_PROTOCOL}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}

  adminer:
    image: adminer
    container_name: transcendence-adminer
    ports: 
      - 8080:8080
