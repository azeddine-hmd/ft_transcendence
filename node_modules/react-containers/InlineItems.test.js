"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var enzyme_1 = require("enzyme");
var React = require("react");
var InlineItems_1 = require("./InlineItems");
require("jest-styled-components");
describe('<InlineItems/>', function () {
    it('renders items inlined', function () {
        var underTest = enzyme_1.mount(React.createElement(InlineItems_1.InlineItems, null,
            React.createElement("div", { className: 'x' }, "A"),
            React.createElement("div", { className: 'x' }, "B")));
        expect(underTest).toHaveStyleRule('display', 'flex');
        expect(underTest.find('.x')).toHaveLength(2);
    });
    it('uses container for items if specified', function () {
        var CustomCont = function (props) { return React.createElement("div", null, props.children); };
        var underTest = enzyme_1.mount(React.createElement(InlineItems_1.InlineItems, { container: CustomCont },
            React.createElement("div", { className: 'x' }, "A"),
            React.createElement("div", { className: 'x' }, "B")));
        expect(underTest).toHaveStyleRule('display', 'flex');
        // container is there
        expect(underTest.find(CustomCont)).toHaveLength(2);
        // children still there
        expect(underTest.find('.x')).toHaveLength(2);
    });
    it('it left pads items if rAlign is true', function () {
        var underTest = enzyme_1.mount(React.createElement(InlineItems_1.InlineItems, { rAlign: true },
            React.createElement("div", { className: 'x' }, "A"),
            React.createElement("div", { className: 'x' }, "B"),
            React.createElement("div", { className: 'x' }, "C")));
        expect(underTest.find('ReactContainers-LeftPad')).toHaveLength(3);
    });
});
//# sourceMappingURL=InlineItems.test.js.map